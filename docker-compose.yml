x-postgres-env: &postgres-env
  POSTGRES_USER: ${POSTGRES_USER:-subs_user}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-subs_password}
  POSTGRES_DB: ${POSTGRES_DB:-subs_db}

x-app-env: &app-env
  APP_ENV: ${APP_ENV:-local}
  HTTP_HOST: ${HTTP_HOST:-0.0.0.0}
  HTTP_PORT: ${HTTP_PORT:-8080}
  HTTP_TIMEOUT: ${HTTP_TIMEOUT:-5s}
  HTTP_CORS_ORIGINS: ${HTTP_CORS_ORIGINS:-http://localhost:8082,http://127.0.0.1:8082}
  POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}
  POSTGRES_USER: ${POSTGRES_USER:-subs_user}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-subs_password}
  POSTGRES_DB: ${POSTGRES_DB:-subs_db}
  POSTGRES_SSLMODE: ${POSTGRES_SSLMODE:-disable}

services:
  postgres:
    image: postgres:latest
    container_name: subs_pg
    environment:
      <<: *postgres-env
    ports:
      - "${PG_PORT_HOST:-5433}:${PG_PORT_CONTAINER:-5432}"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  migrate:
    profiles: ["manual"]
    image: migrate/migrate:4
    entrypoint: [ "migrate" ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      - postgres
    restart: "no"

  adminer:
    image: adminer:latest
    container_name: subs_adminer
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - "${ADMINER_PORT_HOST:-8081}:${ADMINER_PORT_CONTAINER:-8080}"
    restart: unless-stopped

  tests:
    image: golang:1.24
    container_name: subs_tests
    working_dir: /app
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
    environment:
      <<: *app-env
      DOCKER_HOST: unix:///var/run/docker.sock
      TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock
      TESTCONTAINERS_RYUK_DISABLED: "true"
      TESTCONTAINERS_DOCKER_SWARM_DISABLED: "true"
    command: >
      sh -c "
        go test ./... -v
      "
  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "${SWAGGER_PORT_HOST:-8082}:${SWAGGER_PORT_CONTAINER:-8080}"
    environment:
      SWAGGER_JSON: /api/swagger.yaml
    volumes:
      - ./api/swagger/swagger.yaml:/api/swagger.yaml:ro
    depends_on:
      - app
  app:
    build:
      context: .
    depends_on:
      tests:
        condition: service_completed_successfully
    ports:
      - "${APP_PORT_HOST:-8080}:${APP_PORT_CONTAINER:-8080}"
    environment:
      <<: *app-env
    restart: unless-stopped

volumes:
  pg_data:
